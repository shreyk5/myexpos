loadi(63,13);	//load library code
loadi(64,14);

loadi(65,7);	//load INIT program
loadi(66,8);

loadi(22,35);	//load INT10 module
loadi(23,36);

loadi(2,15);	//load exception handler
loadi(3,16);

loadi(4,17);	//load timer interrupt
loadi(5,18);

loadi(16,29);	//INT7 for print
loadi(17,30);

loadi(69,11);	//load idle code
loadi(70,12);

//----------------set the page table entries for idle process------------------

PTBR = PAGE_TABLE_BASE;

// LIBRARY
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

// HEAP
[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

// CODE
[PTBR+8] = 69;
[PTBR+9] = "0100";
[PTBR+10] = 70;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//STACK
[PTBR+16] = 81;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";

// ---------------------------------------------------------------------


//------------- set the page table entries for init program-------

PTBR = PTBR+20;
// LIBRARY
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

// HEAP
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

// CODE
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//STACK
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

PTBR = PTBR - 20;
//----------------------------------------------------------

//process table uses 16 words for a process starting from process having pid=0
//--------- SET THE PROCESS TABLE ENTRIES FOR IDLE PROCESS---------------

[PROCESS_TABLE+1] = 0;		//pid
[PROCESS_TABLE+4] = CREATED;	//state
[PROCESS_TABLE+11] = 82;	//user area page no.
[PROCESS_TABLE+12] = 0;		//KPTR
[PROCESS_TABLE+13] = 8*512 ;	//UPTR
[PROCESS_TABLE+14] = PTBR;      //PTBR
[PROCESS_TABLE+15] = 10;	//PTLR
//------------------------------------------------------------------------


//-----------SET THE PROCESS TABLE ENTRIES FOR INIT PROCESS-------------

[PROCESS_TABLE+16+1] = 1;	//pid
[PROCESS_TABLE+16+4] = RUNNING;	//state
[PROCESS_TABLE+16+11] = 80;	//user area page no.
[PROCESS_TABLE+16+12] = 0;      //KPTR
[PROCESS_TABLE+16+13] = 8*512;
[PROCESS_TABLE+16+14] = PTBR+20;//PTBR
[PROCESS_TABLE+16+15] = 10;	//PTLR

//------------------------------------------------------------------------


[81*512] = [69*512 + 1]; //address 69*512+1 contains entry point for idle
[76*512] = [65*512 + 1]; //address 65*512+1 contains entry point for INIT
PTBR = PTBR + 20;
PTLR = 10;
SP = 8*512;
[SYSTEM_STATUS_TABLE+1]=1;
ireturn;

