loadi(63,13);	//load library code
loadi(64,14);

loadi(65,7);	//load INIT program
loadi(66,8);

loadi(22,35);	//load INT10 module
loadi(23,36);

loadi(2,15);	//load exception handler
loadi(3,16);

loadi(4,17);	//load timer interrupt
loadi(5,18);

loadi(14,27);	//INT6 for read
loadi(15,28);
loadi(16,29);	//INT7 for print
loadi(17,30);

loadi(83,69);   //load executable file

loadi(40,53);	//load module 0
loadi(41,54);

loadi(48,61);	//load module 4
loadi(49,62);

loadi(8,21);	//console int. handler
loadi(9,22);

[TERMINAL_STATUS_TABLE] = 0;

// initialise STATE field to be TERMINATED for other processes

alias i R1;
i = 0;

while(i<16) do
	[PROCESS_TABLE+i*16+4] = TERMINATED;
	i = i + 1;
endwhile;

//------------set page table entries for INIT program----------------
PTBR = PAGE_TABLE_BASE + 20;
PTLR = 10;

//LIBRARY
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//HEAP
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

//CODE
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

PTBR = PTBR - 20;

[PROCESS_TABLE+16+1] = 1;
[PROCESS_TABLE+16+4] = CREATED;
[PROCESS_TABLE+16+11] = 80;
[PROCESS_TABLE+16+12] = 0;
[PROCESS_TABLE+16+13] = 8*512;
[PROCESS_TABLE+16+14] = PTBR+20;
[PROCESS_TABLE+16+15] = 10;

[76*512] = [65*512+1];

//------------set page table entries for EXEC program----------------
PTBR = PAGE_TABLE_BASE + 40;
PTLR = 10;
//LIBRARY
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//HEAP
[PTBR+4] = 85;
[PTBR+5] = "0110";
[PTBR+6] = -1;
[PTBR+7] = "0000";

//CODE
[PTBR+8] = 83;
[PTBR+9] = "0100";
[PTBR+10] = 84;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

[PTBR+16] = 86;
[PTBR+17] = "0110";
[PTBR+18] = 87;
[PTBR+19] = "0110";

PTBR = PTBR - 40;

[PROCESS_TABLE+32+1] = 2;
[PROCESS_TABLE+32+4] = CREATED;
[PROCESS_TABLE+32+11] = 88;
[PROCESS_TABLE+32+12] = 0;
[PROCESS_TABLE+32+13] = 8*512;
[PROCESS_TABLE+32+14] = PTBR+40;
[PROCESS_TABLE+32+15] = 10;

[86*512] = [83*512+1];
return;

