//--------------------------MEMORY MANAGER MODULE---------------------------

// R1 contains the function number and R2 contains page num if RELEASE_PAGE

if(R1 == GET_FREE_PAGE) then
	backup;
	
	//increment the wait memory count
	[SYSTEM_STATUS_TABLE+3] = [SYSTEM_STATUS_TABLE+3] + 1;
	
	while([SYSTEM_STATUS_TABLE+2]==0) do
		[PROCESS_TABLE+16*[SYSTEM_STATUS_TABLE+1]+4] = WAIT_MEM;
		backup;
		call MOD_5;
		restore;
	endwhile;	
	[SYSTEM_STATUS_TABLE+3] = [SYSTEM_STATUS_TABLE+3]-1;
	[SYSTEM_STATUS_TABLE+2] = [SYSTEM_STATUS_TABLE+2]-1;
	restore;
	
	//find a free page using memory free list
	alias i R0;
	i = 0;
	while(i<MAX_MEM_PAGE) do
		if([MEMORY_FREE_LIST+i]==0) then
			[MEMORY_FREE_LIST+i] = 1;
			break;
		endif;
		i = i + 1;
	endwhile;
	
	return;
endif;

if(R1 == RELEASE_PAGE) then
	backup;
		
	alias page_num R2;
	[MEMORY_FREE_LIST + page_num] = [MEMORY_FREE_LIST + page_num] - 1;
	
	//if this page is not used by anyone	
	if([MEMORY_FREE_LIST + page_num] == 0) then
		//increment the memory free count
		[SYSTEM_STATUS_TABLE+2] = [SYSTEM_STATUS_TABLE+2]+1;

		//update the status of processes waiting for memory
		alias i R3;
		i = 0;
	
		while(i<16) do
			if([PROCESS_TABLE+16*i+4] == WAIT_MEM) then
				[PROCESS_TABLE+16*i+4] = READY;
			endif;
			i = i + 1;
		endwhile;

	endif;
	
	restore;			
	return;
endif;
